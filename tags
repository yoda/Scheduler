!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
01655ab6ef1200ea1e4405dc4fbb6a9c	doc/html/reader_8c.html	/^<a class="anchor" name="01655ab6ef1200ea1e4405dc4fbb6a9c"><\/a><!-- doxytag: member="reader.c::output" ref="01655ab6ef1200ea1e4405dc4fbb6a9c" args="(process *proc)" -->$/;"	a
01655ab6ef1200ea1e4405dc4fbb6a9c	doc/html/readertemp_8c.html	/^<a class="anchor" name="01655ab6ef1200ea1e4405dc4fbb6a9c"><\/a><!-- doxytag: member="readertemp.c::output" ref="01655ab6ef1200ea1e4405dc4fbb6a9c" args="(process *proc)" -->$/;"	a
051d094213c5463271ef7f3f94e403ad	doc/html/reader_8c.html	/^<a class="anchor" name="051d094213c5463271ef7f3f94e403ad"><\/a><!-- doxytag: member="reader.c::print" ref="051d094213c5463271ef7f3f94e403ad" args="(process *proc, int length)" -->$/;"	a
051d094213c5463271ef7f3f94e403ad	doc/html/readertemp_8c.html	/^<a class="anchor" name="051d094213c5463271ef7f3f94e403ad"><\/a><!-- doxytag: member="readertemp.c::print" ref="051d094213c5463271ef7f3f94e403ad" args="(process *proc, int length)" -->$/;"	a
08e3536edc64ec5ee7c2df546c6e9dd7	doc/html/cmdline_8c.html	/^<a class="anchor" name="08e3536edc64ec5ee7c2df546c6e9dd7"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser2" ref="08e3536edc64ec5ee7c2df546c6e9dd7" args="(int argc, char *const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required)" -->$/;"	a
12a02a9cebfa58fe341e41548c5d69ab	doc/html/reader_8c.html	/^<a class="anchor" name="12a02a9cebfa58fe341e41548c5d69ab"><\/a><!-- doxytag: member="reader.c::sort" ref="12a02a9cebfa58fe341e41548c5d69ab" args="(process **proc, int length)" -->$/;"	a
12a02a9cebfa58fe341e41548c5d69ab	doc/html/readertemp_8c.html	/^<a class="anchor" name="12a02a9cebfa58fe341e41548c5d69ab"><\/a><!-- doxytag: member="readertemp.c::sort" ref="12a02a9cebfa58fe341e41548c5d69ab" args="(process **proc, int length)" -->$/;"	a
147ceda5f975cc44e1cc3c387b762ddf	doc/html/reader_8c.html	/^<a class="anchor" name="147ceda5f975cc44e1cc3c387b762ddf"><\/a><!-- doxytag: member="reader.c::printQueue" ref="147ceda5f975cc44e1cc3c387b762ddf" args="(QUEUE *queue)" -->$/;"	a
147ceda5f975cc44e1cc3c387b762ddf	doc/html/readertemp_8c.html	/^<a class="anchor" name="147ceda5f975cc44e1cc3c387b762ddf"><\/a><!-- doxytag: member="readertemp.c::printQueue" ref="147ceda5f975cc44e1cc3c387b762ddf" args="(QUEUE *queue)" -->$/;"	a
1f73418092a6e6eb3706aa0de2785e11	doc/html/cmdline_8c.html	/^<a class="anchor" name="1f73418092a6e6eb3706aa0de2785e11"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_dump" ref="1f73418092a6e6eb3706aa0de2785e11" args="(FILE *outfile, struct gengetopt_args_info *args_info)" -->$/;"	a
2856d7db6abdc36f9c1ecb2b3765230f	doc/html/reader_8c.html	/^<a class="anchor" name="2856d7db6abdc36f9c1ecb2b3765230f"><\/a><!-- doxytag: member="reader.c::shortestNext" ref="2856d7db6abdc36f9c1ecb2b3765230f" args="(QUEUE *pqueue)" -->$/;"	a
2c4f14c424a31db9c57fd046c3b9f0df	doc/html/readertemp_8c.html	/^<a class="anchor" name="2c4f14c424a31db9c57fd046c3b9f0df"><\/a><!-- doxytag: member="readertemp.c::strdup" ref="2c4f14c424a31db9c57fd046c3b9f0df" args="(const char *str)" -->$/;"	a
322565ccf348d13e4d3de13af771e5fc	doc/html/main_8c.html	/^<a class="anchor" name="322565ccf348d13e4d3de13af771e5fc"><\/a><!-- doxytag: member="main.c::debug" ref="322565ccf348d13e4d3de13af771e5fc" args="" -->$/;"	a
3c04138a5bfe5d72780bb7e82a18e627	doc/html/main_8c.html	/^<a class="anchor" name="3c04138a5bfe5d72780bb7e82a18e627"><\/a><!-- doxytag: member="main.c::main" ref="3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->$/;"	a
3c04138a5bfe5d72780bb7e82a18e627	doc/html/readertemp_8c.html	/^<a class="anchor" name="3c04138a5bfe5d72780bb7e82a18e627"><\/a><!-- doxytag: member="readertemp.c::main" ref="3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->$/;"	a
3f026f59cf8d16f2c5fd4931c3c32ebb	doc/html/readertemp_8c.html	/^<a class="anchor" name="3f026f59cf8d16f2c5fd4931c3c32ebb"><\/a><!-- doxytag: member="readertemp.c::readFile" ref="3f026f59cf8d16f2c5fd4931c3c32ebb" args="(int *length)" -->$/;"	a
5f3e9412f88f1058a31ac28ad2ea2818	doc/html/cmdline_8c.html	/^<a class="anchor" name="5f3e9412f88f1058a31ac28ad2ea2818"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_file_save" ref="5f3e9412f88f1058a31ac28ad2ea2818" args="(const char *filename, struct gengetopt_args_info *args_info)" -->$/;"	a
610c3307abce5a8fd304b86b018ae60b	doc/html/cmdline_8c.html	/^<a class="anchor" name="610c3307abce5a8fd304b86b018ae60b"><\/a><!-- doxytag: member="cmdline.c::gengetopt_args_info_purpose" ref="610c3307abce5a8fd304b86b018ae60b" args="" -->$/;"	a
65fe8d7216eda7580f414308007e8154	doc/html/handler_8c.html	/^<a class="anchor" name="65fe8d7216eda7580f414308007e8154"><\/a><!-- doxytag: member="handler.c::scheduler" ref="65fe8d7216eda7580f414308007e8154" args="(char **inputfile, char **algorithm, int *quantum)" -->$/;"	a
6af7a6b7fb37c0abaa916ee1cfa0a41f	doc/html/cmdline_8c.html	/^<a class="anchor" name="6af7a6b7fb37c0abaa916ee1cfa0a41f"><\/a><!-- doxytag: member="cmdline.c::gengetopt_args_info_help" ref="6af7a6b7fb37c0abaa916ee1cfa0a41f" args="[]" -->$/;"	a
77e461b5bdfd4a36c59a96bfb1813e38	doc/html/cmdline_8c.html	/^<a class="anchor" name="77e461b5bdfd4a36c59a96bfb1813e38"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_ext" ref="77e461b5bdfd4a36c59a96bfb1813e38" args="(int argc, char *const *argv, struct gengetopt_args_info *args_info, struct cmdline_parser_params *params)" -->$/;"	a
7e272d0fe9ad475cb922d2c450b756f1	doc/html/queue_8c.html	/^<a class="anchor" name="7e272d0fe9ad475cb922d2c450b756f1"><\/a><!-- doxytag: member="queue.c::isEmpty" ref="7e272d0fe9ad475cb922d2c450b756f1" args="(QUEUE *queue)" -->$/;"	a
83651e5be280d60aed58fdb72456a030	doc/html/cmdline_8c.html	/^<a class="anchor" name="83651e5be280d60aed58fdb72456a030"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_required" ref="83651e5be280d60aed58fdb72456a030" args="(struct gengetopt_args_info *args_info, const char *prog_name)" -->$/;"	a
88e31a859f36efa57ad64e6ae13332a1	doc/html/cmdline_8c.html	/^<a class="anchor" name="88e31a859f36efa57ad64e6ae13332a1"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_arg_type" ref="88e31a859f36efa57ad64e6ae13332a1" args="" -->$/;"	a
88e31a859f36efa57ad64e6ae13332a11e0904ee5e3baf2aa4070ab0718a3afa	doc/html/cmdline_8c.html	/^<tr><td valign="top"><em><a class="anchor" name="88e31a859f36efa57ad64e6ae13332a11e0904ee5e3baf2aa4070ab0718a3afa"><\/a><!-- doxytag: member="ARG_STRING" ref="88e31a859f36efa57ad64e6ae13332a11e0904ee5e3baf2aa4070ab0718a3afa" args="" -->ARG_STRING<\/em>&nbsp;<\/td><td>$/;"	a
88e31a859f36efa57ad64e6ae13332a158393752406d163205fa18f450909993	doc/html/cmdline_8c.html	/^<tr><td valign="top"><em><a class="anchor" name="88e31a859f36efa57ad64e6ae13332a158393752406d163205fa18f450909993"><\/a><!-- doxytag: member="ARG_INT" ref="88e31a859f36efa57ad64e6ae13332a158393752406d163205fa18f450909993" args="" -->ARG_INT<\/em>&nbsp;<\/td><td>$/;"	a
88e31a859f36efa57ad64e6ae13332a167dd250fb3e23862523b667407868ada	doc/html/cmdline_8c.html	/^<tr><td valign="top"><em><a class="anchor" name="88e31a859f36efa57ad64e6ae13332a167dd250fb3e23862523b667407868ada"><\/a><!-- doxytag: member="ARG_NO" ref="88e31a859f36efa57ad64e6ae13332a167dd250fb3e23862523b667407868ada" args="" -->ARG_NO<\/em>&nbsp;<\/td><td>$/;"	a
908bb69c1cf03c0a928a8a1fdcc957d2	doc/html/queue_8c.html	/^<a class="anchor" name="908bb69c1cf03c0a928a8a1fdcc957d2"><\/a><!-- doxytag: member="queue.c::dequeue" ref="908bb69c1cf03c0a928a8a1fdcc957d2" args="(QUEUE *queue, void **data, size_t *size)" -->$/;"	a
914892adfd28425e112c0152754aa9f5	doc/html/reader_8c.html	/^<a class="anchor" name="914892adfd28425e112c0152754aa9f5"><\/a><!-- doxytag: member="reader.c::getReady" ref="914892adfd28425e112c0152754aa9f5" args="(QUEUE *pqueue, QUEUE *ready, int time_cycle)" -->$/;"	a
914892adfd28425e112c0152754aa9f5	doc/html/readertemp_8c.html	/^<a class="anchor" name="914892adfd28425e112c0152754aa9f5"><\/a><!-- doxytag: member="readertemp.c::getReady" ref="914892adfd28425e112c0152754aa9f5" args="(QUEUE *pqueue, QUEUE *ready, int time_cycle)" -->$/;"	a
96f1044799c552f3ee139f9b1387b363	doc/html/cmdline_8c.html	/^<a class="anchor" name="96f1044799c552f3ee139f9b1387b363"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser" ref="96f1044799c552f3ee139f9b1387b363" args="(int argc, char *const *argv, struct gengetopt_args_info *args_info)" -->$/;"	a
96f27bf35ce0ab8eea7a1f6e6b59a5e2	doc/html/cmdline_8c.html	/^<a class="anchor" name="96f27bf35ce0ab8eea7a1f6e6b59a5e2"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_print_version" ref="96f27bf35ce0ab8eea7a1f6e6b59a5e2" args="(void)" -->$/;"	a
98532579e94e95f322df48029c36d600	doc/html/reader_8c.html	/^<a class="anchor" name="98532579e94e95f322df48029c36d600"><\/a><!-- doxytag: member="reader.c::firstCome" ref="98532579e94e95f322df48029c36d600" args="(QUEUE *pqueue)" -->$/;"	a
98532579e94e95f322df48029c36d600	doc/html/readertemp_8c.html	/^<a class="anchor" name="98532579e94e95f322df48029c36d600"><\/a><!-- doxytag: member="readertemp.c::firstCome" ref="98532579e94e95f322df48029c36d600" args="(QUEUE *pqueue)" -->$/;"	a
9d92d5fd943184e547ba24fe47af8a55	doc/html/reader_8c.html	/^<a class="anchor" name="9d92d5fd943184e547ba24fe47af8a55"><\/a><!-- doxytag: member="reader.c::sortSPN" ref="9d92d5fd943184e547ba24fe47af8a55" args="(QUEUE *ready)" -->$/;"	a
9f397a306f363bfdebb611e86acf36d5	doc/html/cmdline_8c.html	/^<a class="anchor" name="9f397a306f363bfdebb611e86acf36d5"><\/a><!-- doxytag: member="cmdline.c::gengetopt_args_info_usage" ref="9f397a306f363bfdebb611e86acf36d5" args="" -->$/;"	a
ARG_INT	src/cmdline.c	/^  , ARG_INT$/;"	e	enum:__anon2	file:
ARG_NO	src/cmdline.c	/^typedef enum {ARG_NO$/;"	e	enum:__anon2	file:
ARG_STRING	src/cmdline.c	/^  , ARG_STRING$/;"	e	enum:__anon2	file:
CC	Makefile	/^CC=cc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-I$(IDIR) -std=c99 -pedantic$/;"	m
CMDLINE_H	include/cmdline.h	/^#define CMDLINE_H$/;"	d
CMDLINE_PARSER_PACKAGE	include/cmdline.h	/^#define CMDLINE_PARSER_PACKAGE /;"	d
CMDLINE_PARSER_VERSION	include/cmdline.h	/^#define CMDLINE_PARSER_VERSION /;"	d
DEPS	Makefile	/^DEPS = $(patsubst %,$(IDIR)\/%,$(_DEPS))$/;"	m
EXENAME	Makefile	/^EXENAME = prosim$/;"	m
File Documentation	doc/latex/refman.tex	/^\\input{files}$/;"	c
File Index	doc/latex/refman.tex	/^\\pagenumbering{arabic}$/;"	c
File List	doc/latex/files.tex	/^\\section{File List}$/;"	s
IDIR	Makefile	/^IDIR =.\/include$/;"	m
LDIR	Makefile	/^LDIR =.\/lib$/;"	m
LIBS	Makefile	/^LIBS=-lm$/;"	m
LINK	include/queue.h	/^} LINK;$/;"	t	typeref:struct:link
OBJ	Makefile	/^OBJ = $(patsubst %,$(ODIR)\/%,$(_OBJ))$/;"	m
ODIR	Makefile	/^ODIR=.\/obj$/;"	m
QUEUE	include/queue.h	/^} QUEUE;$/;"	t	typeref:struct:queue
SDIR	Makefile	/^SDIR = .\/src$/;"	m
_DEPS	Makefile	/^_DEPS = $/;"	m
_OBJ	Makefile	/^_OBJ = queue.o reader.o cmdline.o main.o handler.o$/;"	m
__anon1::duration	include/reader.h	/^          int duration;$/;"	m	struct:__anon1	access:public
__anon1::name	include/reader.h	/^          char *name;$/;"	m	struct:__anon1	access:public
__anon1::pages	include/reader.h	/^          int pages;$/;"	m	struct:__anon1	access:public
__anon1::run	include/reader.h	/^          struct queue *run;$/;"	m	struct:__anon1	typeref:struct:__anon1::queue	access:public
__anon1::start	include/reader.h	/^          int start;$/;"	m	struct:__anon1	access:public
a535334c24710d062c9a4ed881484514	doc/html/queue_8c.html	/^<a class="anchor" name="a535334c24710d062c9a4ed881484514"><\/a><!-- doxytag: member="queue.c::peek" ref="a535334c24710d062c9a4ed881484514" args="(QUEUE *queue, void **data, size_t *size)" -->$/;"	a
algorithm_arg	include/cmdline.h	/^  char * algorithm_arg;	\/**< @brief Scheduler algorithm. (default='FCFS').  *\/$/;"	m	struct:gengetopt_args_info	access:public
algorithm_given	include/cmdline.h	/^  unsigned int algorithm_given ;	\/**< @brief Whether algorithm was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
algorithm_help	include/cmdline.h	/^  const char *algorithm_help; \/**< @brief Scheduler algorithm. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
algorithm_orig	include/cmdline.h	/^  char * algorithm_orig;	\/**< @brief Scheduler algorithm. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
be5f2fec4ac321c2ac1c19a9ad07bc2a	doc/html/cmdline_8c.html	/^<a class="anchor" name="be5f2fec4ac321c2ac1c19a9ad07bc2a"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_algorithm_values" ref="be5f2fec4ac321c2ac1c19a9ad07bc2a" args="[]" -->$/;"	a
c3ad972b83b741b5eb78b48820883c1d	doc/html/reader_8c.html	/^<a class="anchor" name="c3ad972b83b741b5eb78b48820883c1d"><\/a><!-- doxytag: member="reader.c::shortestRemaining" ref="c3ad972b83b741b5eb78b48820883c1d" args="(QUEUE *pqueue)" -->$/;"	a
c447175fbc74e5ee285c58c27b14dc09	doc/html/reader_8c.html	/^<a class="anchor" name="c447175fbc74e5ee285c58c27b14dc09"><\/a><!-- doxytag: member="reader.c::roundRobin" ref="c447175fbc74e5ee285c58c27b14dc09" args="(QUEUE *pqueue, int quantum)" -->$/;"	a
c447175fbc74e5ee285c58c27b14dc09	doc/html/readertemp_8c.html	/^<a class="anchor" name="c447175fbc74e5ee285c58c27b14dc09"><\/a><!-- doxytag: member="readertemp.c::roundRobin" ref="c447175fbc74e5ee285c58c27b14dc09" args="(QUEUE *pqueue, int quantum)" -->$/;"	a
ca62b50d03d0d082968eeb1940f98650	doc/html/cmdline_8c.html	/^<a class="anchor" name="ca62b50d03d0d082968eeb1940f98650"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_init" ref="ca62b50d03d0d082968eeb1940f98650" args="(struct gengetopt_args_info *args_info)" -->$/;"	a
ccad6107ca685f6eba555f6ce63d355d	doc/html/cmdline_8c.html	/^<a class="anchor" name="ccad6107ca685f6eba555f6ce63d355d"><\/a><!-- doxytag: member="cmdline.c::gengetopt_args_info_description" ref="ccad6107ca685f6eba555f6ce63d355d" args="" -->$/;"	a
ccdfd8fd114893cb1bf3f6f656fcc76c	doc/html/queue_8c.html	/^<a class="anchor" name="ccdfd8fd114893cb1bf3f6f656fcc76c"><\/a><!-- doxytag: member="queue.c::enqueue" ref="ccdfd8fd114893cb1bf3f6f656fcc76c" args="(QUEUE *queue, void *data, size_t size)" -->$/;"	a
check_ambiguity	include/cmdline.h	/^  int check_ambiguity; \/**< @brief whether to check for options already specified in the option structure gengetopt_args_info (default 0) *\/$/;"	m	struct:cmdline_parser_params	access:public
check_possible_values	src/cmdline.c	/^check_possible_values(const char *val, char *values[])$/;"	f	file:	signature:(const char *val, char *values[])
check_required	include/cmdline.h	/^  int check_required; \/**< @brief whether to check that all required options were provided (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
clear_args	src/cmdline.c	/^void clear_args (struct gengetopt_args_info *args_info)$/;"	f	file:	signature:(struct gengetopt_args_info *args_info)
clear_args	src/cmdline.c	/^void clear_args (struct gengetopt_args_info *args_info);$/;"	p	file:	signature:(struct gengetopt_args_info *args_info)
clear_given	src/cmdline.c	/^void clear_given (struct gengetopt_args_info *args_info)$/;"	f	file:	signature:(struct gengetopt_args_info *args_info)
clear_given	src/cmdline.c	/^void clear_given (struct gengetopt_args_info *args_info);$/;"	p	file:	signature:(struct gengetopt_args_info *args_info)
clonePage	src/reader.c	/^void clonePage(int *expire) {$/;"	f	signature:(int *expire)
cmdline_parser	include/cmdline.h	/^int cmdline_parser (int argc, char * const *argv,$/;"	p	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info)
cmdline_parser	src/cmdline.c	/^cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info)$/;"	f	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info)
cmdline_parser2	include/cmdline.h	/^int cmdline_parser2 (int argc, char * const *argv,$/;"	p	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required)
cmdline_parser2	src/cmdline.c	/^cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required)$/;"	f	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required)
cmdline_parser_algorithm_values	src/cmdline.c	/^char *cmdline_parser_algorithm_values[] = {"FCFS", "RR", "SRT", "SPN", 0} ;	\/* Possible values for algorithm.  *\/$/;"	v
cmdline_parser_arg_type	src/cmdline.c	/^} cmdline_parser_arg_type;$/;"	t	typeref:enum:__anon2	file:
cmdline_parser_dump	include/cmdline.h	/^int cmdline_parser_dump(FILE *outfile,$/;"	p	signature:(FILE *outfile, struct gengetopt_args_info *args_info)
cmdline_parser_dump	src/cmdline.c	/^cmdline_parser_dump(FILE *outfile, struct gengetopt_args_info *args_info)$/;"	f	signature:(FILE *outfile, struct gengetopt_args_info *args_info)
cmdline_parser_ext	include/cmdline.h	/^int cmdline_parser_ext (int argc, char * const *argv,$/;"	p	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, struct cmdline_parser_params *params)
cmdline_parser_ext	src/cmdline.c	/^cmdline_parser_ext (int argc, char * const *argv, struct gengetopt_args_info *args_info,$/;"	f	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, struct cmdline_parser_params *params)
cmdline_parser_file_save	include/cmdline.h	/^int cmdline_parser_file_save(const char *filename,$/;"	p	signature:(const char *filename, struct gengetopt_args_info *args_info)
cmdline_parser_file_save	src/cmdline.c	/^cmdline_parser_file_save(const char *filename, struct gengetopt_args_info *args_info)$/;"	f	signature:(const char *filename, struct gengetopt_args_info *args_info)
cmdline_parser_free	include/cmdline.h	/^void cmdline_parser_free (struct gengetopt_args_info *args_info);$/;"	p	signature:(struct gengetopt_args_info *args_info)
cmdline_parser_free	src/cmdline.c	/^cmdline_parser_free (struct gengetopt_args_info *args_info)$/;"	f	signature:(struct gengetopt_args_info *args_info)
cmdline_parser_init	include/cmdline.h	/^void cmdline_parser_init (struct gengetopt_args_info *args_info);$/;"	p	signature:(struct gengetopt_args_info *args_info)
cmdline_parser_init	src/cmdline.c	/^cmdline_parser_init (struct gengetopt_args_info *args_info)$/;"	f	signature:(struct gengetopt_args_info *args_info)
cmdline_parser_internal	src/cmdline.c	/^cmdline_parser_internal (int argc, char * const *argv, struct gengetopt_args_info *args_info,$/;"	f	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, struct cmdline_parser_params *params, const char *additional_error)
cmdline_parser_internal	src/cmdline.c	/^cmdline_parser_internal (int argc, char * const *argv, struct gengetopt_args_info *args_info,$/;"	p	file:	signature:(int argc, char * const *argv, struct gengetopt_args_info *args_info, struct cmdline_parser_params *params, const char *additional_error)
cmdline_parser_params	include/cmdline.h	/^struct cmdline_parser_params$/;"	s
cmdline_parser_params::check_ambiguity	include/cmdline.h	/^  int check_ambiguity; \/**< @brief whether to check for options already specified in the option structure gengetopt_args_info (default 0) *\/$/;"	m	struct:cmdline_parser_params	access:public
cmdline_parser_params::check_required	include/cmdline.h	/^  int check_required; \/**< @brief whether to check that all required options were provided (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
cmdline_parser_params::initialize	include/cmdline.h	/^  int initialize; \/**< @brief whether to initialize the option structure gengetopt_args_info (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
cmdline_parser_params::override	include/cmdline.h	/^  int override; \/**< @brief whether to override possibly already present options (default 0) *\/$/;"	m	struct:cmdline_parser_params	access:public
cmdline_parser_params::print_errors	include/cmdline.h	/^  int print_errors; \/**< @brief whether getopt_long should print an error message for a bad option (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
cmdline_parser_params_create	include/cmdline.h	/^struct cmdline_parser_params *cmdline_parser_params_create(void);$/;"	p	signature:(void)
cmdline_parser_params_create	src/cmdline.c	/^cmdline_parser_params_create(void)$/;"	f	signature:(void)
cmdline_parser_params_init	include/cmdline.h	/^void cmdline_parser_params_init(struct cmdline_parser_params *params);$/;"	p	signature:(struct cmdline_parser_params *params)
cmdline_parser_params_init	src/cmdline.c	/^cmdline_parser_params_init(struct cmdline_parser_params *params)$/;"	f	signature:(struct cmdline_parser_params *params)
cmdline_parser_print_help	include/cmdline.h	/^void cmdline_parser_print_help(void);$/;"	p	signature:(void)
cmdline_parser_print_help	src/cmdline.c	/^cmdline_parser_print_help (void)$/;"	f	signature:(void)
cmdline_parser_print_version	include/cmdline.h	/^void cmdline_parser_print_version(void);$/;"	p	signature:(void)
cmdline_parser_print_version	src/cmdline.c	/^cmdline_parser_print_version (void)$/;"	f	signature:(void)
cmdline_parser_release	src/cmdline.c	/^cmdline_parser_release (struct gengetopt_args_info *args_info)$/;"	f	file:	signature:(struct gengetopt_args_info *args_info)
cmdline_parser_required	include/cmdline.h	/^int cmdline_parser_required (struct gengetopt_args_info *args_info,$/;"	p	signature:(struct gengetopt_args_info *args_info, const char *prog_name)
cmdline_parser_required	src/cmdline.c	/^cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name)$/;"	f	signature:(struct gengetopt_args_info *args_info, const char *prog_name)
cmdline_parser_required2	src/cmdline.c	/^cmdline_parser_required2 (struct gengetopt_args_info *args_info, const char *prog_name, const char *additional_error)$/;"	f	signature:(struct gengetopt_args_info *args_info, const char *prog_name, const char *additional_error)
cmdline_parser_required2	src/cmdline.c	/^cmdline_parser_required2 (struct gengetopt_args_info *args_info, const char *prog_name, const char *additional_error);$/;"	p	file:	signature:(struct gengetopt_args_info *args_info, const char *prog_name, const char *additional_error)
d3993d1ecc5237fcd44975adc12cf745	doc/html/reader_8c.html	/^<a class="anchor" name="d3993d1ecc5237fcd44975adc12cf745"><\/a><!-- doxytag: member="reader.c::readFile" ref="d3993d1ecc5237fcd44975adc12cf745" args="(char *filename, int *length)" -->$/;"	a
d4f7db2fa4002379eb30e5206f3b7492	doc/html/cmdline_8c.html	/^<a class="anchor" name="d4f7db2fa4002379eb30e5206f3b7492"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_print_help" ref="d4f7db2fa4002379eb30e5206f3b7492" args="(void)" -->$/;"	a
d5da30511bca5b51fc2b9f4afb3a518d	doc/html/queue_8c.html	/^<a class="anchor" name="d5da30511bca5b51fc2b9f4afb3a518d"><\/a><!-- doxytag: member="queue.c::init" ref="d5da30511bca5b51fc2b9f4afb3a518d" args="(char *queuename)" -->$/;"	a
debug	src/main.c	/^#define debug$/;"	d	file:
dequeue	include/queue.h	/^extern int dequeue(QUEUE* , void** , size_t *);$/;"	p	signature:(QUEUE* , void** , size_t *)
dequeue	src/queue.c	/^int dequeue(QUEUE* queue, void** data, size_t *size) {$/;"	f	signature:(QUEUE* queue, void** data, size_t *size)
duration	include/reader.h	/^          int duration;$/;"	m	struct:__anon1	access:public
end	include/queue.h	/^	LINK *end;$/;"	m	struct:queue	access:public
enqueue	include/queue.h	/^extern int enqueue(QUEUE* , void* , size_t );$/;"	p	signature:(QUEUE* , void* , size_t )
enqueue	src/queue.c	/^int enqueue(QUEUE* queue, void* data, size_t size) {$/;"	f	signature:(QUEUE* queue, void* data, size_t size)
expire_arg	include/cmdline.h	/^  int expire_arg;	\/**< @brief Number of Quantums at which the result will be returned..  *\/$/;"	m	struct:gengetopt_args_info	access:public
expire_given	include/cmdline.h	/^  unsigned int expire_given ;	\/**< @brief Whether expire was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
expire_help	include/cmdline.h	/^  const char *expire_help; \/**< @brief Number of Quantums at which the result will be returned. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
expire_orig	include/cmdline.h	/^  char * expire_orig;	\/**< @brief Number of Quantums at which the result will be returned. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
f1b97c4e92b88f736e350b3902266ba4	doc/html/cmdline_8c.html	/^<a class="anchor" name="f1b97c4e92b88f736e350b3902266ba4"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_free" ref="f1b97c4e92b88f736e350b3902266ba4" args="(struct gengetopt_args_info *args_info)" -->$/;"	a
f72b814611cffc706b2135ccdfe7e997	doc/html/cmdline_8c.html	/^<a class="anchor" name="f72b814611cffc706b2135ccdfe7e997"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_params_init" ref="f72b814611cffc706b2135ccdfe7e997" args="(struct cmdline_parser_params *params)" -->$/;"	a
fd778af110fe0ee1ea5eac7aa9939d92	doc/html/cmdline_8c.html	/^<a class="anchor" name="fd778af110fe0ee1ea5eac7aa9939d92"><\/a><!-- doxytag: member="cmdline.c::cmdline_parser_params_create" ref="fd778af110fe0ee1ea5eac7aa9939d92" args="(void)" -->$/;"	a
fillFrames	src/reader.c	/^void fillFrames(process *proc,int time_cycle) {$/;"	f	signature:(process *proc,int time_cycle)
findFree	src/reader.c	/^int findFree() {$/;"	f
firstCome	include/reader.h	/^extern void firstCome(QUEUE *pqueue, int *expire, int *mode);$/;"	p	signature:(QUEUE *pqueue, int *expire, int *mode)
firstCome	src/reader.c	/^void firstCome(QUEUE *pqueue, int *expire, int *mode) {$/;"	f	signature:(QUEUE *pqueue, int *expire, int *mode)
firstCome	src/readertemp(dep).c	/^void firstCome(QUEUE *pqueue) {$/;"	f	signature:(QUEUE *pqueue)
firstCome	src/readertemp.c	/^void firstCome(QUEUE *pqueue) {$/;"	f	signature:(QUEUE *pqueue)
freeFrame	src/reader.c	/^void freeFrame(int index) {$/;"	f	signature:(int index)
freeFrames	src/reader.c	/^void freeFrames(int num) {$/;"	f	signature:(int num)
free_string_field	src/cmdline.c	/^free_string_field (char **s)$/;"	f	file:	signature:(char **s)
gengetopt_args_info	include/cmdline.h	/^struct gengetopt_args_info$/;"	s
gengetopt_args_info::algorithm_arg	include/cmdline.h	/^  char * algorithm_arg;	\/**< @brief Scheduler algorithm. (default='FCFS').  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::algorithm_given	include/cmdline.h	/^  unsigned int algorithm_given ;	\/**< @brief Whether algorithm was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::algorithm_help	include/cmdline.h	/^  const char *algorithm_help; \/**< @brief Scheduler algorithm. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::algorithm_orig	include/cmdline.h	/^  char * algorithm_orig;	\/**< @brief Scheduler algorithm. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::expire_arg	include/cmdline.h	/^  int expire_arg;	\/**< @brief Number of Quantums at which the result will be returned..  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::expire_given	include/cmdline.h	/^  unsigned int expire_given ;	\/**< @brief Whether expire was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::expire_help	include/cmdline.h	/^  const char *expire_help; \/**< @brief Number of Quantums at which the result will be returned. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::expire_orig	include/cmdline.h	/^  char * expire_orig;	\/**< @brief Number of Quantums at which the result will be returned. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::help_given	include/cmdline.h	/^  unsigned int help_given ;	\/**< @brief Whether help was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::help_help	include/cmdline.h	/^  const char *help_help; \/**< @brief Print help and exit help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::input_arg	include/cmdline.h	/^  char * input_arg;	\/**< @brief Input filename for Jobs list..  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::input_given	include/cmdline.h	/^  unsigned int input_given ;	\/**< @brief Whether input was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::input_help	include/cmdline.h	/^  const char *input_help; \/**< @brief Input filename for Jobs list. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::input_orig	include/cmdline.h	/^  char * input_orig;	\/**< @brief Input filename for Jobs list. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::quantum_arg	include/cmdline.h	/^  int quantum_arg;	\/**< @brief Time Quantum for Processor. (default='2').  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::quantum_given	include/cmdline.h	/^  unsigned int quantum_given ;	\/**< @brief Whether quantum was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::quantum_help	include/cmdline.h	/^  const char *quantum_help; \/**< @brief Time Quantum for Processor. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::quantum_orig	include/cmdline.h	/^  char * quantum_orig;	\/**< @brief Time Quantum for Processor. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::scheduler_given	include/cmdline.h	/^  unsigned int scheduler_given ;	\/**< @brief Whether scheduler was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::scheduler_help	include/cmdline.h	/^  const char *scheduler_help; \/**< @brief Process Scheduler. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::simulator_group_counter	include/cmdline.h	/^  int simulator_group_counter; \/**< @brief Counter for group simulator *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::version_given	include/cmdline.h	/^  unsigned int version_given ;	\/**< @brief Whether version was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::version_help	include/cmdline.h	/^  const char *version_help; \/**< @brief Print version and exit help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::virtualmem_given	include/cmdline.h	/^  unsigned int virtualmem_given ;	\/**< @brief Whether virtualmem was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info::virtualmem_help	include/cmdline.h	/^  const char *virtualmem_help; \/**< @brief Virtual Memory Scheduler. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
gengetopt_args_info_description	src/cmdline.c	/^const char *gengetopt_args_info_description = "";$/;"	v
gengetopt_args_info_help	src/cmdline.c	/^const char *gengetopt_args_info_help[] = {$/;"	v
gengetopt_args_info_purpose	src/cmdline.c	/^const char *gengetopt_args_info_purpose = "";$/;"	v
gengetopt_args_info_usage	src/cmdline.c	/^const char *gengetopt_args_info_usage = "Usage: prosim [OPTIONS]...";$/;"	v
gengetopt_strdup	src/cmdline.c	/^gengetopt_strdup (const char *s)$/;"	f	signature:(const char *s)
gengetopt_strdup	src/cmdline.c	/^gengetopt_strdup (const char *s);$/;"	p	file:	signature:(const char *s)
getFirstAge	src/reader.c	/^int getFirstAge() {$/;"	f
getReady	include/reader.h	/^extern void getReady(QUEUE *pqueue, QUEUE *ready, int time_cycle);$/;"	p	signature:(QUEUE *pqueue, QUEUE *ready, int time_cycle)
getReady	src/reader.c	/^void getReady(QUEUE *pqueue, QUEUE *ready, int time_cycle) {$/;"	f	signature:(QUEUE *pqueue, QUEUE *ready, int time_cycle)
getReady	src/readertemp(dep).c	/^void getReady(QUEUE *pqueue, QUEUE *ready, int time_cycle) {$/;"	f	signature:(QUEUE *pqueue, QUEUE *ready, int time_cycle)
getReady	src/readertemp.c	/^void getReady(QUEUE *pqueue, QUEUE *ready, int time_cycle) {$/;"	f	signature:(QUEUE *pqueue, QUEUE *ready, int time_cycle)
help_given	include/cmdline.h	/^  unsigned int help_given ;	\/**< @brief Whether help was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
help_help	include/cmdline.h	/^  const char *help_help; \/**< @brief Print help and exit help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
index_a	doc/html/globals.html	/^<h3><a class="anchor" name="index_a">- a -<\/a><\/h3><ul>$/;"	a
index_c	doc/html/globals.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_c	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_c">- c -<\/a><\/h3><ul>$/;"	a
index_d	doc/html/globals.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_d	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_d">- d -<\/a><\/h3><ul>$/;"	a
index_e	doc/html/globals.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_e	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_e">- e -<\/a><\/h3><ul>$/;"	a
index_f	doc/html/globals.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_f	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_f">- f -<\/a><\/h3><ul>$/;"	a
index_g	doc/html/globals.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_g	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_g">- g -<\/a><\/h3><ul>$/;"	a
index_i	doc/html/globals.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_i	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_i">- i -<\/a><\/h3><ul>$/;"	a
index_m	doc/html/globals.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_m	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_m">- m -<\/a><\/h3><ul>$/;"	a
index_o	doc/html/globals.html	/^<h3><a class="anchor" name="index_o">- o -<\/a><\/h3><ul>$/;"	a
index_o	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_o">- o -<\/a><\/h3><ul>$/;"	a
index_p	doc/html/globals.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_p	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_p">- p -<\/a><\/h3><ul>$/;"	a
index_r	doc/html/globals.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_r	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_r">- r -<\/a><\/h3><ul>$/;"	a
index_s	doc/html/globals.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
index_s	doc/html/globals_func.html	/^<h3><a class="anchor" name="index_s">- s -<\/a><\/h3><ul>$/;"	a
init	include/queue.h	/^extern QUEUE *init(char *);$/;"	p	signature:(char *)
init	src/queue.c	/^QUEUE *init(char *queuename) {$/;"	f	signature:(char *queuename)
initMemory	src/reader.c	/^void initMemory() {$/;"	f
init_args_info	src/cmdline.c	/^void init_args_info(struct gengetopt_args_info *args_info)$/;"	f	file:	signature:(struct gengetopt_args_info *args_info)
initialize	include/cmdline.h	/^  int initialize; \/**< @brief whether to initialize the option structure gengetopt_args_info (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
input_arg	include/cmdline.h	/^  char * input_arg;	\/**< @brief Input filename for Jobs list..  *\/$/;"	m	struct:gengetopt_args_info	access:public
input_given	include/cmdline.h	/^  unsigned int input_given ;	\/**< @brief Whether input was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
input_help	include/cmdline.h	/^  const char *input_help; \/**< @brief Input filename for Jobs list. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
input_orig	include/cmdline.h	/^  char * input_orig;	\/**< @brief Input filename for Jobs list. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
isCached	src/reader.c	/^bool isCached(int pid) {$/;"	f	signature:(int pid)
isEmpty	include/queue.h	/^extern int isEmpty(QUEUE *);$/;"	p	signature:(QUEUE *)
isEmpty	src/queue.c	/^int isEmpty(QUEUE *queue) {$/;"	f	signature:(QUEUE *queue)
latex_count	doc/latex/Makefile	/^	latex_count=5 ; \\$/;"	m
link	include/queue.h	/^typedef struct link {$/;"	s
link::next	include/queue.h	/^	struct link *next;$/;"	m	struct:link	typeref:struct:link::link	access:public
link::payload	include/queue.h	/^	void *payload;$/;"	m	struct:link	access:public
link::size	include/queue.h	/^	size_t size;$/;"	m	struct:link	access:public
link::successor	include/queue.h	/^	struct link *successor;$/;"	m	struct:link	typeref:struct:link::link	access:public
main	src/main.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	src/queue.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	src/readertemp(dep).c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	src/readertemp.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
name	include/queue.h	/^	char *name;$/;"	m	struct:queue	access:public
name	include/reader.h	/^          char *name;$/;"	m	struct:__anon1	access:public
next	include/queue.h	/^	struct link *next;$/;"	m	struct:link	typeref:struct:link::link	access:public
output	include/reader.h	/^extern void output(process *proc);$/;"	p	signature:(process *proc)
output	src/reader.c	/^void output(process *proc) {$/;"	f	signature:(process *proc)
output	src/readertemp(dep).c	/^void output(process *proc) {$/;"	f	signature:(process *proc)
output	src/readertemp.c	/^void output(process *proc) {$/;"	f	signature:(process *proc)
override	include/cmdline.h	/^  int override; \/**< @brief whether to override possibly already present options (default 0) *\/$/;"	m	struct:cmdline_parser_params	access:public
package_name	src/cmdline.c	/^static char *package_name = 0;$/;"	v	file:
page	src/reader.c	/^int page[200];			\/\/the virtual memory array$/;"	v
page_save	src/reader.c	/^int page_save[200];		\/\/clone of the page table for printing at a given time$/;"	v
pages	include/reader.h	/^          int pages;$/;"	m	struct:__anon1	access:public
paget	src/reader.c	/^int paget[200][2];		\/\/the page table array$/;"	v
paget_save	src/reader.c	/^int paget_save[200][2];	\/\/clone of the page table for printing at a given time$/;"	v
payload	include/queue.h	/^	void *payload;$/;"	m	struct:link	access:public
peek	include/queue.h	/^extern int peek(QUEUE *, void **, size_t *);$/;"	p	signature:(QUEUE *, void **, size_t *)
peek	src/queue.c	/^int peek(QUEUE *queue, void **data, size_t *size) {$/;"	f	signature:(QUEUE *queue, void **data, size_t *size)
print	include/reader.h	/^extern void print(process *proc, int length);$/;"	p	signature:(process *proc, int length)
print	src/reader.c	/^void print(process *proc,int length) {$/;"	f	signature:(process *proc,int length)
print	src/readertemp(dep).c	/^void print(process *proc,int length) {$/;"	f	signature:(process *proc,int length)
print	src/readertemp.c	/^void print(process *proc,int length) {$/;"	f	signature:(process *proc,int length)
printPage	include/reader.h	/^extern void printPage(int *expire);$/;"	p	signature:(int *expire)
printPage	src/reader.c	/^void printPage(int *expire) {$/;"	f	signature:(int *expire)
printQueue	include/reader.h	/^extern void printQueue(QUEUE *queue);$/;"	p	signature:(QUEUE *queue)
printQueue	src/reader.c	/^void printQueue(QUEUE *queue) {$/;"	f	signature:(QUEUE *queue)
printQueue	src/readertemp(dep).c	/^void printQueue(QUEUE *queue) {$/;"	f	signature:(QUEUE *queue)
printQueue	src/readertemp.c	/^void printQueue(QUEUE *queue) {$/;"	f	signature:(QUEUE *queue)
print_errors	include/cmdline.h	/^  int print_errors; \/**< @brief whether getopt_long should print an error message for a bad option (default 1) *\/$/;"	m	struct:cmdline_parser_params	access:public
print_help_common	src/cmdline.c	/^static void print_help_common(void) {$/;"	f	file:	signature:(void)
process	include/reader.h	/^} process;$/;"	t	typeref:struct:__anon1
quantum_arg	include/cmdline.h	/^  int quantum_arg;	\/**< @brief Time Quantum for Processor. (default='2').  *\/$/;"	m	struct:gengetopt_args_info	access:public
quantum_given	include/cmdline.h	/^  unsigned int quantum_given ;	\/**< @brief Whether quantum was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
quantum_help	include/cmdline.h	/^  const char *quantum_help; \/**< @brief Time Quantum for Processor. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
quantum_orig	include/cmdline.h	/^  char * quantum_orig;	\/**< @brief Time Quantum for Processor. original value given at command line.  *\/$/;"	m	struct:gengetopt_args_info	access:public
queue	include/queue.h	/^typedef struct queue{$/;"	s
queue::end	include/queue.h	/^	LINK *end;$/;"	m	struct:queue	access:public
queue::name	include/queue.h	/^	char *name;$/;"	m	struct:queue	access:public
queue::start	include/queue.h	/^	LINK *start;$/;"	m	struct:queue	access:public
readFile	include/reader.h	/^extern process **readFile(char *filename,int *length, int *mode);$/;"	p	signature:(char *filename,int *length, int *mode)
readFile	src/reader.c	/^process **readFile(char * filename,int *length,int *mode) {$/;"	f	signature:(char * filename,int *length,int *mode)
readFile	src/readertemp(dep).c	/^process ** readFile(int *length) {$/;"	f	signature:(int *length)
readFile	src/readertemp.c	/^process ** readFile(int *length) {$/;"	f	signature:(int *length)
reset_group_simulator	src/cmdline.c	/^reset_group_simulator(struct gengetopt_args_info *args_info)$/;"	f	file:	signature:(struct gengetopt_args_info *args_info)
roundRobin	include/reader.h	/^extern void roundRobin(QUEUE *pqueue, int quantum);$/;"	p	signature:(QUEUE *pqueue, int quantum)
roundRobin	src/reader.c	/^void roundRobin(QUEUE *pqueue,int quantum) {$/;"	f	signature:(QUEUE *pqueue,int quantum)
roundRobin	src/readertemp(dep).c	/^void roundRobin(QUEUE *pqueue,int quantum) {$/;"	f	signature:(QUEUE *pqueue,int quantum)
roundRobin	src/readertemp.c	/^void roundRobin(QUEUE *pqueue,int quantum) {$/;"	f	signature:(QUEUE *pqueue,int quantum)
run	include/reader.h	/^          struct queue *run;$/;"	m	struct:__anon1	typeref:struct:__anon1::queue	access:public
scheduler	include/handler.h	/^extern void scheduler(char**, char**, int*, int*, int*);$/;"	p	signature:(char**, char**, int*, int*, int*)
scheduler	src/handler.c	/^void scheduler(char **inputfile, char **algorithm, int *quantum, int *expire,int *mode) {$/;"	f	signature:(char **inputfile, char **algorithm, int *quantum, int *expire,int *mode)
scheduler_given	include/cmdline.h	/^  unsigned int scheduler_given ;	\/**< @brief Whether scheduler was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
scheduler_help	include/cmdline.h	/^  const char *scheduler_help; \/**< @brief Process Scheduler. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
shortestNext	include/reader.h	/^extern void shortestNext(QUEUE *pqueue);$/;"	p	signature:(QUEUE *pqueue)
shortestNext	src/reader.c	/^void shortestNext(QUEUE *pqueue) {$/;"	f	signature:(QUEUE *pqueue)
shortestRemaining	include/reader.h	/^extern void shortestRemaining(QUEUE *pqueue);$/;"	p	signature:(QUEUE *pqueue)
shortestRemaining	src/reader.c	/^void shortestRemaining(QUEUE *pqueue) {$/;"	f	signature:(QUEUE *pqueue)
simulator_group_counter	include/cmdline.h	/^  int simulator_group_counter; \/**< @brief Counter for group simulator *\/$/;"	m	struct:gengetopt_args_info	access:public
size	include/queue.h	/^	size_t size;$/;"	m	struct:link	access:public
sort	include/reader.h	/^extern QUEUE* sort(process **proc, int length);$/;"	p	signature:(process **proc, int length)
sort	src/reader.c	/^QUEUE * sort(process **proc, int length) {$/;"	f	signature:(process **proc, int length)
sort	src/readertemp(dep).c	/^QUEUE * sort(process **proc, int length) {$/;"	f	signature:(process **proc, int length)
sort	src/readertemp.c	/^QUEUE * sort(process **proc, int length) {$/;"	f	signature:(process **proc, int length)
sortSPN	include/reader.h	/^extern void sortSPN(QUEUE *ready);$/;"	p	signature:(QUEUE *ready)
sortSPN	src/reader.c	/^void sortSPN(QUEUE * ready) {$/;"	f	signature:(QUEUE * ready)
src cmdline c File Reference	doc/latex/cmdline_8c.tex	/^\\hypertarget{cmdline_8c}{$/;"	s
src handler c File Reference	doc/latex/handler_8c.tex	/^\\hypertarget{handler_8c}{$/;"	s
src main c File Reference	doc/latex/main_8c.tex	/^\\hypertarget{main_8c}{$/;"	s
src queue c File Reference	doc/latex/queue_8c.tex	/^\\hypertarget{queue_8c}{$/;"	s
src reader c File Reference	doc/latex/reader_8c.tex	/^\\hypertarget{reader_8c}{$/;"	s
src readertemp c File Reference	doc/latex/readertemp_8c.tex	/^\\hypertarget{readertemp_8c}{$/;"	s
start	include/queue.h	/^	LINK *start;$/;"	m	struct:queue	access:public
start	include/reader.h	/^          int start;$/;"	m	struct:__anon1	access:public
strdup	include/reader.h	/^extern char *strdup(const char * str);$/;"	p	signature:(const char * str)
strdup	src/readertemp(dep).c	/^extern char * strdup(const char * str);$/;"	p	file:	signature:(const char * str)
strdup	src/readertemp.c	/^extern char * strdup(const char * str);$/;"	p	file:	signature:(const char * str)
successor	include/queue.h	/^	struct link *successor;$/;"	m	struct:link	typeref:struct:link::link	access:public
toggleFolder	doc/html/tree.html	/^    function toggleFolder(id, imageNode) $/;"	f
update_arg	src/cmdline.c	/^int update_arg(void *field, char **orig_field,$/;"	f	file:	signature:(void *field, char **orig_field, unsigned int *field_given, unsigned int *prev_given, char *value, char *possible_values[], const char *default_value, cmdline_parser_arg_type arg_type, int check_ambiguity, int override, int no_free, int multiple_option, const char *long_opt, char short_opt, const char *additional_error)
version_given	include/cmdline.h	/^  unsigned int version_given ;	\/**< @brief Whether version was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
version_help	include/cmdline.h	/^  const char *version_help; \/**< @brief Print version and exit help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
virtualmem_given	include/cmdline.h	/^  unsigned int virtualmem_given ;	\/**< @brief Whether virtualmem was given.  *\/$/;"	m	struct:gengetopt_args_info	access:public
virtualmem_help	include/cmdline.h	/^  const char *virtualmem_help; \/**< @brief Virtual Memory Scheduler. help description.  *\/$/;"	m	struct:gengetopt_args_info	access:public
vout	src/reader.c	/^char *vout;				\/\/virtual memory print string$/;"	v
write_into_file	src/cmdline.c	/^write_into_file(FILE *outfile, const char *opt, const char *arg, char *values[])$/;"	f	file:	signature:(FILE *outfile, const char *opt, const char *arg, char *values[])
